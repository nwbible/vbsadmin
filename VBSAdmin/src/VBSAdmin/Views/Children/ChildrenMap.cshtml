@model VBSAdmin.Models.ChildrenViewModels.ChildrenMapViewModel

@{
    ViewData["Title"] = "Registered Children Map";
}


<h2>Registered Children Map</h2>


<img src="http://maps.google.com/mapfiles/ms/icons/green-dot.png" />@Model.ChurchName
<img src="http://maps.google.com/mapfiles/ms/icons/red-dot.png" />Unchurched
<img src="http://maps.google.com/mapfiles/ms/icons/blue-dot.png" />Other Church
<p></p>
<div id="map" style="width:1200px;height:800px"></div>


@section Scripts {

    <script>
        function initMap() {
            var markers = @Html.Raw(ViewBag.Markers);
            var infoWindow = new google.maps.InfoWindow();

            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 11,
                center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });


            var markerList = [];

            for (i = 0; i < markers.length; i++) {
                var data = markers[i]
                var myLatlng = new google.maps.LatLng(data.lat, data.lng);
                var marker = new google.maps.Marker({
                    position: myLatlng,
                    title: data.title
                });
                if (data.homeChurch == "home") {
                    marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png')
                }
                else {
                    if (data.homeChurch == "none") {
                        marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');
                    }
                    else {
                        marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');
                    }
                }
                (function (marker, data) {
                    google.maps.event.addListener(marker, "click", function (e) {
                        infoWindow.setContent(data.description);
                        infoWindow.open(map, marker);
                    });
                })(marker, data);

                markerList[i] = marker;
            }


            // Add a marker clusterer to manage the markers.
            var markerCluster = new MarkerClusterer(map, markerList,
                { imagePath: '/lib/gmap-clusterer/markerclusterer/images/g', minimumClusterSize: '10' });
        }
    </script>
    <script src="~/lib/gmap-clusterer/markerclusterer/src/markerclusterer.js">
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDbfVH8TAC_3Itet0g5PIu1iJ7OY7ebr8Y&callback=initMap">
    </script>
}

