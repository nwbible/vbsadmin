@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Identity
@using VBSAdmin.Models

@inject IAuthorizationService AuthorizationService
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="LogOff" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            @if (await AuthorizationService.AuthorizeAsync(User, "TenantAdmin"))
            {
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><i class="fa fa-gear fa-lg"></i></a>
                <ul class="dropdown-menu">
                    <li><a asp-area="" asp-controller="VBS" asp-action="Index" title="Change VBS">Change Active VBS</a></li>
                    <li><a asp-area="" asp-controller="Account" asp-action="TenantUserList" title="Manage Church Users">Manage Church Users</a></li>
                </ul>
            </li>
            }
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><i class="fa fa-user fa-lg"></i></a>
                <ul class="dropdown-menu">
                    <li><button type="submit" class="btn btn-link navbar-btn navbar-link">Log off</button></li>
                    <li><a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage">Manage Settings</a></li>
                </ul>
            </li>


        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="" asp-controller="Account" asp-action="Login">Log in</a></li>
    </ul>
}
